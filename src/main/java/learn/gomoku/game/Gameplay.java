package learn.gomoku.game;

import java.util.List;

public class Gameplay {

    public void printGameBoard(List<Stone> previousMoves){
        // start with empty board
        String[][] gameBoard = {
            {"   ", " 01"," 02"," 03"," 04"," 05"," 06"," 07"," 08", " 09"," 10"," 11"," 12"," 13"," 14"," 15",},
            {"01 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"02 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"03 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"04 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"05 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"06 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"07 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"08 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"09 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"10 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"11 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"12 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"13 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"14 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
            {"15 ", "  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _","  _",},
        };

        // populate board with previous moves
        for (int i = 0; i < previousMoves.size(); i++) {
            Stone move = previousMoves.get(i);
            // plus 1 to stop stone touching edge of board
            gameBoard[move.getRow()+1][move.getColumn()+1] = move.isBlack() ? "  B" : "  W";
        }

        // print board
        for (int row = 0; row < gameBoard.length; row++) {
            for (int column = 0; column < gameBoard[row].length; column++) {
                System.out.print(gameBoard[row][column]);
            }
            System.out.println();
        }
    }

}